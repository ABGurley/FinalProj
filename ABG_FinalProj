# -*- coding: utf-8 -*-
"""
Created on Wed Apr 27 18:24:24 2022

@author: 18067
"""

import pulp as pp

#create variable
prob = pp.LpProblem("AQI", pp.LpMaximize)

# define variables
Swd = pp.LpVariable("Weekday", 2, None)
Swe = pp.LpVariable("Weekend", 0, 6)

# objective function
prob += 151*Swd + 64*Swe

# constraints
prob += 590*Swd + 240*Swe <= 1800
#prob += Swd >= 2
#prob += Swe <= 6

# do work
prob.solve()

# print status
print("Status", pp.LpStatus[prob.status])

# print everything else
for v in prob.variables():
    print(v.name, "=", v.varValue)

# Example 2 ==========================================

Identifiers = ["A", "B", "C", "D", "E"]
Prices = dict(zip(Identifiers, [100.0, 99.0, 100.5, 101.5, 200.0]))
n = len(Identifiers)
x = pp.LpVariable.dicts("x", indexs = Identifiers, lowBound = 0, upBound = 1, cat = "Integer", indexStart = [])
prob = pp.LpProblem("Minimalist example", pp.LpMinimize)
prob += pp.lpSum([x[i] for i in Identifiers]) == 3, "Constraint is that we choose two items"
prob.solve()

for v in prob.variables():
    print(v.name, "=", v.varValue)
    
print("Status", pp.LpStatus[prob.status])


# Example 3 ==================================================

#create variable
prob = pp.LpProblem("Product Production", pp.LpMaximize)

# define variables
x1 = pp.LpVariable("Product 1", 0, None)
x2 = pp.LpVariable("Product 2", 0, None)
x3 = pp.LpVariable("Product 3", 0, None)

# objective function
prob += 151*Swd + 64*Swe

# constraints
prob += 590*Swd + 240*Swe <= 1800
#prob += Swd >= 2
#prob += Swe <= 6

# do work
prob.solve()

# print status
print("Status", pp.LpStatus[prob.status])

# print everything else
for v in prob.variables():
    print(v.name, "=", v.varValue)
